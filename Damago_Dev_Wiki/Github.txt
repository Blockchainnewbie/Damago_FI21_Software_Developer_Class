Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2024-03-12T10:09:23+01:00

====== Github ======
Angelegt Dienstag 12 März 2024

git status - Status abfrage
git add - Datei zum Commit vorbereiten

**Pull:**
Das Pullen bezieht sich darauf, Änderungen von einem Remote-Repository auf deinen lokalen Computer herunterzuladen. Wenn andere Teammitglieder Änderungen in den Remote-Branch gepusht haben und du diese Änderungen in deinem lokalen Branch haben möchtest, führst du einen Pull aus. Ein Pull umfasst normalerweise zwei Schritte: das Herunterladen der neuesten Änderungen und das Zusammenführen (Merge oder Rebase) dieser Änderungen in deinem lokalen Branch.

**Merge:**
Das Mergen bezieht sich auf das Zusammenführen von Änderungen aus einem Branch in einen anderen. Wenn du zwei separate Entwicklungslinien hast, wie zum Beispiel einen Feature-Branch und den Haupt-Branch (z.B. "main"), kannst du die Änderungen aus dem Feature-Branch in den Haupt-Branch mergen. Ein Merge erzeugt normalerweise einen neuen Merge-Commit, der die beiden Entwicklungslinien zusammenführt. Dies ermöglicht es, verschiedene Änderungen von verschiedenen Entwicklern in einem einzigen Verlauf zu integrieren.

**Commit:** 
Ein Commit ist eine grundlegende Einheit der Versionierung in Git. Wenn du Änderungen an deinem Code vornimmst, erstellst du einen Commit, der diese Änderungen zusammenfasst. Ein Commit enthält einen Satz von Änderungen, eine Commit-Nachricht (um zu beschreiben, was du geändert hast) und einen eindeutigen Identifikator (Commit-ID). Commits bilden die Grundlage für die Verfolgung von Änderungen in deinem Projekt und ermöglichen es, den Code auf frühere Zustände zurückzusetzen oder Änderungen nachzuvollziehen.

Git commit -a
git commit -a -v -m "Teste erneut" direkt commit ohne Stage mit Kommentar und Details
Der Befehl git commit -a ist eine spezielle Verwendung des git commit-Befehls mit der Option -a. Er ermöglicht es, Änderungen in deinem Arbeitsverzeichnis direkt zu committen, ohne zuvor den git add-Befehl zum Hinzufügen der Änderungen zur Staging Area zu verwende

Zusammengefasst: Push und Pull sind Aktionen, um Änderungen zwischen deinem lokalen und Remote-Repository auszutauschen. Commit bezieht sich auf das Festhalten von Änderungen in deinem lokalen Repository, und Merge bezieht sich auf das Zusammenführen von Änderungen aus verschiedenen Branches.

**git add:**
Der Befehl git add wird verwendet, um Änderungen in deinem Arbeitsverzeichnis (deinen Code-Dateien) zu markieren und sie für den nächsten Commit vorzubereiten. Wenn du Änderungen an deinem Code vorgenommen hast und diese in den nächsten Commit aufnehmen möchtest, musst du sie zuerst mit git add hinzufügen. Dieser Befehl informiert Git darüber, welche Änderungen du in den Zwischenspeicher (Staging Area) legen möchtest, um sie dann mit einem Commit zu verknüpfen.

git add datei1.txt    # Fügt Änderungen in "datei1.txt" zur Staging Area hinzu
git add ordner/       # Fügt alle Änderungen im Ordner "ordner" zur Staging Area hinzu

**git status:**
Der Befehl git status wird verwendet, um den aktuellen Zustand deines Arbeitsverzeichnisses im Verhältnis zum Git-Repository anzuzeigen. Es zeigt an, welche Dateien modifiziert wurden, welche Dateien zur Staging Area hinzugefügt wurden und welche Dateien bereit sind, in den nächsten Commit aufgenommen zu werden. git status ist eine nützliche Möglichkeit, um den Überblick über den Fortschritt deiner Arbeit und die notwendigen Schritte für den nächsten Commit zu behalten.

